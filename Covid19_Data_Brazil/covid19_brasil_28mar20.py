# -*- coding: utf-8 -*-
"""covid19_Brasil_28MAR20.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10C00X-DgNRCd1nEJe7veTZ_N_1nSmJXk

## **OBTENDO DADOS E PREPARANDO O AMBIENTE**
"""

import pandas as pd
import numpy as np
casos = pd.read_csv('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv')
casos.tail()

casos.rename(columns={'Country/Region' : 'Country'}, inplace = True)
casos.tail()

"""## **SELECIONANDO DADOS DO BRASIL**"""

casos_BR = casos[casos.Country == "Brazil"]
casos_BR.tail()

filtro_brasil = casos["Country"] == "Brazil"
casos.loc[filtro_brasil]

casos_BR.tail()

casos_BR = np.sum(casos_BR.iloc[ : , 4 : casos_BR.shape[1]]) ##Criando um índice atravez do atributo de data
casos_BR.index = pd.DatetimeIndex(casos_BR.index)
casos_BR.tail()

casos_BR.plot() ##Gráfico com o número de casos do Brasil

"""## **MORTES POR COVID-19 NO BRASIL**"""

mortes = pd.read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv")
mortes.tail()

mortes.rename(columns={'Country/Region' : 'Country'}, inplace = True)
mortes.tail()

mortes_BR = mortes[mortes.Country == "Brazil"]
mortes_BR.tail()

##Criando um índice atravez do atributo de data
mortes_BR = np.sum(mortes_BR.iloc[ : , 4 : mortes_BR.shape[1]])
mortes_BR.index = pd.DatetimeIndex(mortes_BR.index)
mortes_BR.tail()

mortes_BR.plot() ##Gráfico com o número de mortes do Brasil

"""## **MORTALIDADE NO BRASIL**"""

mortalidade_BR = (mortes_BR/casos_BR)*100
mortalidade_BR.tail()

mortalidade_BR.plot()

"""## **DADOS DE PACIENTES RECUPERADOS NO BRASIL**"""

recuperados = pd.read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv")
recuperados.shape

recuperados.rename(columns={'Country/Region' : 'Country'}, inplace = True)
recuperados.tail()

recuperados_BR = recuperados[recuperados.Country == "Brazil"]
recuperados_BR.tail()

##Criando um índice atravez do atributo de data
recuperados_BR = np.sum(recuperados_BR.iloc[ : , 4 : recuperados_BR.shape[1]])
recuperados_BR.index = pd.DatetimeIndex(recuperados_BR.index)
recuperados_BR.tail()

recuperados_BR.plot()